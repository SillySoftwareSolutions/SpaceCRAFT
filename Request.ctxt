#BlueJ class context
comment0.target=Request
comment0.text=\r\n\ Ein\ Player\ (Client)\ sendet\ nur\ Requests\ an\ den\ Server\ \=>\ im\ client-package\ keine\ Referenzen\ auf\r\n\ das\ Server-package\!\r\n\ Wenn\ ein\ neuer\ Socket\ erstellt\ wird,\ muss\ er\ zuallererst\ einen\ boolean\ senden,\ damit\ der\ Server\ wei\u00DF,\ was\ es\ f\u00FCr\ ein\ Client\ ist.\r\n\ True\ steht\ f\u00FCr\ Request-Client,\ false\ f\u00FCr\ Task-Client.\r\n\ Liste\ aller\ Request-Funktionen\ -\ sollte\ aktualisiert\ werden,\ wenn\ neue\ dazukommen\:\r\n\ Main.exit()\r\n\ Main.exitIfNoPlayers()\r\n\ Main.newPlayer(String\ name)\r\n\ Main.getPlayer(String\ name)\r\n\ Main.login()\r\n\ Main.logout()\r\n\ Main.returnFromMenu(String\ menuName,\ Object[]\ menuParams)\r\n\ Main.synchronizePlayerVariable(String\ varname,\ Class\ class,\ Object\ value)\r\n\ Main.synchronizePlayerSVariable(String\ varname,\ Class\ class,\ Object\ value)\r\n\ Main.synchronizePlayerCVariable(String\ varname,\ Class\ class,\ Object\ value)\ (diese\ drei\ setzen\ Werte\ von\ Variablen\ der\ Kopie\ des\ Players\ am\ Server\ zu\ dem\ angegebenen\ Wert)\r\n\ Main.retrievePlayer()\ (id\ wird\ ja\ schon\ mitgegeben)\ (zur\ Synchronisierung)\r\n\ Main.writeIntoChat(String\ message)\r\n\ Main.getChatContent(int\ numLines)\r\n\ Main.getOtherPlayerTextures(int\ PlayerID,\ VektorI\ upperLeftCorner,\ VektorI\ bottomRightCorner)\r\n\ Space.getFocussedMassIndex(VektorD\ pos,\ VektorD\ posToNull,\ VektorI\ screenSize,\ Double\ scale)\r\n\ Space.getMassPos(Integer\ index)\r\n\ Space.getAllPos()\r\n\ Space.getAllRadii()\ <\=\ echter\ Plural\r\n\ Space.getAllOrbits()\r\n\ Sandbox.breakBlock(Boolean\ onPlanet,\ Integer\ sandboxIndex,\ VektorI\ sPos)\ v0.3.1_AK\r\n\ Sandbox.placeBlock(Boolean\ onPlanet,\ Integer\ sandboxIndex,\ VektorI\ sPos,\ Integer\ blockID)\ v0.3.1_AK\r\n\ Sandbox.rightclickBlock(Boolean\ onPlanet,\ Integer\ sandboxIndex,\ VektorI\ sPos)\r\n\ Sandbox.getMapIDs(Boolean\ onPlanet,\ Integer\ sandboxIndex,\ VektorI\ upperLeftCorner,\ VektorI\ bottomRightCorner)\r\n\ Sandbox.getAllSubsandboxTransferData(Boolean\ onPlanet,\ Integer\ sandboxIndex)\r\n\ \r\n\ (die\ hier\ angegebenen\ Argumente\ sind\ nur\ die\ aus\ params,\ alle\ Funktionen\ haben\ als\ \u00DCbergabewert\ auch\ noch\ die\ ID\ des\ players)\r\n\ Bei\ Sandbox.*-Methoden\ ist\ der\ erste\ Parameter\ aus\ params\ playerC.onPlanet,\ der\ zweite\ der\ SandboxIndex.\r\n
comment1.params=playerID\ socketOut\ socketIn\ todo\ retClass\ params
comment1.target=Request(int,\ java.io.ObjectOutputStream,\ java.io.ObjectInputStream,\ java.lang.String,\ java.lang.Class,\ java.lang.Object[])
comment1.text=\r\n\ Der\ Player\ mit\ der\ gegebenen\ PlayerID\ stellt\ den\ Request,\ dass\ der\ Server\ todo\ tut,\ er\ \u00FCbergibt\ die\ Parameter\ params.\r\n\ Es\ sollte\ jedes\ Mal\ \u00FCberpr\u00FCft\ werden,\ ob\ der\ Player\ \u00FCberhaupt\ auf\ dem\ Client\ und\ online\ ist.\r\n\ Konvention\:\ todo\=Klassenname+"."+Methodenname\r\n\ ret\=irgendein\ R\u00FCckgabewert\ (der\ formale\ R\u00FCckgabewert\ ist\ void)\r\n\ (\ \ \ \ <IrgendeineKlasse>\ obj\ \=\ <IrgendeinKonstruktorOderNull>;\r\n\ \ \ \ \ \ Request\ req\ \=\ new\ Request(p,\ todo,\ <IrgendeineKlasse>.class,\ params);\r\n\ \ \ \ \ \ obj\ \=\ (<CastAufIrgendeineKlasse>)\ req.ret;\r\n\ \ \ \ \ \ req\ \=\ null;\ //nur\ Code-Stil,\ da\ der\ Request\ jetzt\ nutzlos\ geworden\ ist\r\n\ \ \ \ \ \ oder\ so\ \u00E4hnlich\r\n\ )\r\n\ Wenn\ retClass\ gleich\ null\ ist,\ dann\ ist\ es\ ein\ Request,\ auf\ dessen\ Antwort\ nicht\ gewartet\ wird\r\n\ (dieser\ hat\ dann\ auch\ keinen\ R\u00FCckgabewert)\ (z.B.\ Main.synchronizePlayerVariable).\r\n\ Da\ alle\ Request-Methoden,\ auf\ die\ gewartet\ wird,\ also\ ein\ R\u00FCckgabeobjekt\ haben\ m\u00FCssen,\ ist\ hiermit\ Konvention,\ \r\n\ dass\ es\ bei\ eigentlichen\ void-Methoden\ ein\ Boolean\ (Objekt)\ ist\ (wird\ true,\ wenn\ der\ Request\ erfolgreich\ war).\r\n\ \u00DCbergabewerte\ der\ Methode\ im\ Server\:\ playerID,\ params,\ wobei\ alle\ primitiven\ Parameter\ zu\ Objekten\ konvertiert\ werden\ (Arrays\ sind\ keine\ primitiven\ Objekte.).\r\n\ \u00DCber\ den\ Nutzen\ von\ retClass\ l\u00E4sst\ sich\ streiten.\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
numComments=3
